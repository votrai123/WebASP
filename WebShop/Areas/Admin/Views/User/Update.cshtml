@model Model.EF.User

@{
    ViewBag.Title = "Update";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

@{
    List<SelectListItem> Status = new List<SelectListItem>();

    Status.Add(new SelectListItem
    {
        Text = "Run",
        Value = true.ToString()
    });
    Status.Add(new SelectListItem
    {
        Text = "Stop",
        Value = false.ToString()
    });
    List<SelectListItem> role = new List<SelectListItem>();

    role.Add(new SelectListItem
    {
        Text = "Admin",
        Value = true.ToString()
    });
    role.Add(new SelectListItem
    {
        Text = "User",
        Value = false.ToString()
    });

    ViewData["Status"] = Status;
    ViewData["role"] = role;
}
@using (Html.BeginForm("Update", "User", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="card">
        <h2>UPDATE USER</h2>
        <hr />
        <div class="card-body card-block">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <form>
                <div class="form-row">
                    <div class="form-group col-md-4">
                        @Html.LabelFor(model => model.UserName)
                        @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                        @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Email",@readonly=true } })
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(model => model.Password)
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        @Html.PasswordFor(model => model.Password, new { @class = "form-control", @placeholder = "Password" })
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group col-md-4">
                        @Html.LabelFor(model => model.FullName)
                        @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                        @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Full Name" } })
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(model => model.Email)
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @placeholder = "Email", @readonly = true } })
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group col-md-4">
                        @Html.LabelFor(model => model.Country)
                        @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                        @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control", @placeholder = "Country" } })
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(model => model.StreetAddress)
                        @Html.ValidationMessageFor(model => model.StreetAddress, "", new { @class = "text-danger" })
                        @Html.EditorFor(model => model.StreetAddress, new { htmlAttributes = new { @class = "form-control", @placeholder = "StreetAddress" } })
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group col-md-8">
                        @Html.LabelFor(model => model.Phone)
                        @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                        @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control", @placeholder = "Phone Number" } })
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group col-md-4">
                        @Html.LabelFor(model => model.Status)
                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                        @Html.DropDownListFor(model => model.Status, (IEnumerable<SelectListItem>)ViewData["Status"], new { @class = "form-control" })
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(model => model.role)
                        @Html.ValidationMessageFor(model => model.role, "", new { @class = "text-danger" })
                        @Html.DropDownListFor(model => model.role, (IEnumerable<SelectListItem>)ViewData["role"], new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-8">
                        <button type="submit" class="btn btn-danger btn-lg btn-block">Update</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
}
